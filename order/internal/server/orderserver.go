// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package server

import (
	"context"

	"2106A-zg6/orderAndGoods/goodsproject/order/internal/logic"
	"2106A-zg6/orderAndGoods/goodsproject/order/internal/svc"
	"2106A-zg6/orderAndGoods/goodsproject/order/pb/order"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	order.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderServer) CreateOrder(ctx context.Context, in *order.CreateOrderReq) (*order.CreateOrderResp, error) {
	l := logic.NewCreateOrderLogic(ctx, s.svcCtx)
	return l.CreateOrder(in)
}

func (s *OrderServer) UpdateOrder(ctx context.Context, in *order.UpOrderStatus) (*order.UpOrderStatusResp, error) {
	l := logic.NewUpdateOrderLogic(ctx, s.svcCtx)
	return l.UpdateOrder(in)
}

func (s *OrderServer) DelOrder(ctx context.Context, in *order.DeleteRequest) (*order.DeleteResponse, error) {
	l := logic.NewDelOrderLogic(ctx, s.svcCtx)
	return l.DelOrder(in)
}

func (s *OrderServer) UpdateOrders(ctx context.Context, in *order.UpdateRequest) (*order.UpdateResponse, error) {
	l := logic.NewUpdateOrdersLogic(ctx, s.svcCtx)
	return l.UpdateOrders(in)
}

func (s *OrderServer) SelectOrder(ctx context.Context, in *order.SelectRequest) (*order.SelectResponse, error) {
	l := logic.NewSelectOrderLogic(ctx, s.svcCtx)
	return l.SelectOrder(in)
}

func (s *OrderServer) CreateOrderRoll(ctx context.Context, in *order.CreateOrderReq) (*order.CreateOrderResp, error) {
	l := logic.NewCreateOrderRollLogic(ctx, s.svcCtx)
	return l.CreateOrderRoll(in)
}
