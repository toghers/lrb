// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package goodsclient

import (
	"context"

	"2106A-zg6/orderAndGoods/goodsproject/rpc/pb/goods"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateGoods     = goods.CreateGoods
	CreateGoodsResp = goods.CreateGoodsResp
	DeductStockReq  = goods.DeductStockReq
	DeductStockResp = goods.DeductStockResp
	DelGoodsInfo    = goods.DelGoodsInfo
	EmptyResp       = goods.EmptyResp
	GoodsResp       = goods.GoodsResp
	GoodsStock      = goods.GoodsStock
	LoginRequest    = goods.LoginRequest
	LoginResponse   = goods.LoginResponse
	SearchRequest   = goods.SearchRequest
	SearchResponse  = goods.SearchResponse
	SelectByIdReq   = goods.SelectByIdReq
	SelectByIdResp  = goods.SelectByIdResp
	SelectGoodsInfo = goods.SelectGoodsInfo
	SelectGoodsResp = goods.SelectGoodsResp
	UpdateGoodsInfo = goods.UpdateGoodsInfo

	Goods interface {
		InsGoods(ctx context.Context, in *CreateGoods, opts ...grpc.CallOption) (*CreateGoodsResp, error)
		DelGoods(ctx context.Context, in *DelGoodsInfo, opts ...grpc.CallOption) (*EmptyResp, error)
		UpdGoods(ctx context.Context, in *UpdateGoodsInfo, opts ...grpc.CallOption) (*GoodsResp, error)
		SelGoods(ctx context.Context, in *SelectGoodsInfo, opts ...grpc.CallOption) (*SelectGoodsResp, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		SearchGood(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
		GetGoodsById(ctx context.Context, in *SelectByIdReq, opts ...grpc.CallOption) (*SelectByIdResp, error)
		DeductStock(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error)
		DeductStockRollback(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error)
	}

	defaultGoods struct {
		cli zrpc.Client
	}
)

func NewGoods(cli zrpc.Client) Goods {
	return &defaultGoods{
		cli: cli,
	}
}

func (m *defaultGoods) InsGoods(ctx context.Context, in *CreateGoods, opts ...grpc.CallOption) (*CreateGoodsResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.InsGoods(ctx, in, opts...)
}

func (m *defaultGoods) DelGoods(ctx context.Context, in *DelGoodsInfo, opts ...grpc.CallOption) (*EmptyResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.DelGoods(ctx, in, opts...)
}

func (m *defaultGoods) UpdGoods(ctx context.Context, in *UpdateGoodsInfo, opts ...grpc.CallOption) (*GoodsResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.UpdGoods(ctx, in, opts...)
}

func (m *defaultGoods) SelGoods(ctx context.Context, in *SelectGoodsInfo, opts ...grpc.CallOption) (*SelectGoodsResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.SelGoods(ctx, in, opts...)
}

func (m *defaultGoods) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultGoods) SearchGood(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.SearchGood(ctx, in, opts...)
}

func (m *defaultGoods) GetGoodsById(ctx context.Context, in *SelectByIdReq, opts ...grpc.CallOption) (*SelectByIdResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.GetGoodsById(ctx, in, opts...)
}

func (m *defaultGoods) DeductStock(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.DeductStock(ctx, in, opts...)
}

func (m *defaultGoods) DeductStockRollback(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.DeductStockRollback(ctx, in, opts...)
}
